{"version":3,"sources":["NewUser.tsx","stores/UserStore.tsx","stores/LegStore.tsx","stores/index.js","Navbar.tsx","Login.tsx","Leg/Leg.tsx","Leg/NewLeg.tsx","Leg/LegMain.tsx","Leg/LegRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NewUserConfirmation","props","react_default","a","createElement","Fragment","NewUserForm","inject","observer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onSubmit","e","preventDefault","_this$state","email","password","confirm","lastName","firstName","middleName","username","UserStore","newUser","then","setState","redirect","catch","error","checkConfirm","onChange","defineProperty","target","id","value","_this$state2","react_router","to","disabled","length","className","NewUser_InputField","type","label","required","Component","InputField","_ref","formattedPlaceholder","_ref$placeholder","placeholder","_ref$required","children","slice","toUpperCase","toLowerCase","htmlFor","New","_ref2","match","exact","path","concat","component","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","action","bound","signInWithEmailAndPassword","currentUser","getIdToken","token","Axios","post","response","isLoggedIn","user","data","createUserWithEmailAndPassword","objectSpread","observable","LegStore","get","params","current","searchParams","legs","put","stores","Navbar","Navbar_dec","Navbar_class","_Component","inherits","createClass","key","react_router_dom","onClick","history","push","session","logout","Login","Login_dec","Login_class","login","goBack","name","Leg","getLeg","asyncToGenerator","regenerator_default","mark","_callee","_response$data","Grades","rest","wrap","_context","prev","next","legId","sent","objectWithoutProperties","Array","from","stop","_callee2","title","district","party","formattedGrades","each","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_each","_context2","abrupt","createdAt","updatedAt","undefined","Symbol","iterator","done","grade","t0","return","finish","withCredentials","_x","apply","arguments","onReset","onRadioChange","newGrades","dataset","i","generate","stopPropagation","responseType","filename","headers","url","window","URL","createObjectURL","Blob","link","document","href","setAttribute","body","appendChild","click","err","imgLink","legPage","phoneNum","notes","lastGenerated","User","_componentDidMount","_callee3","_context3","_this2","_this$state3","map","letter","checked","data-i","NewLeg","NewLeg_dec","NewLeg_class","currentSession","LegMain","listItems","entry","grades","fullName","LegRouter","App","code","index_module","Home","FourOhFour","location","pathname","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df40a4e0.chunk.js","sourcesContent":["import React, { Component, ChangeEvent } from \"react\";\r\nimport { Route, Switch, RouteComponentProps, Redirect } from \"react-router-dom\";\r\nimport { UserStore } from \"./stores\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\nconst NewUserConfirmation: React.FC = props => {\r\n  return <>NewUserConfirmation</>;\r\n};\r\n\r\ninterface INewUserForm extends RouteComponentProps {\r\n  UserStore: UserStore;\r\n}\r\n\r\n@inject(\"UserStore\")\r\n@observer\r\nclass NewUserForm extends Component<INewUserForm> {\r\n  state: {\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    username: string;\r\n    redirect: boolean;\r\n    confirm: string;\r\n    checkConfirm: boolean;\r\n  };\r\n\r\n  constructor(props: INewUserForm) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirm: \"\",\r\n      firstName: \"\",\r\n      middleName: \"\",\r\n      lastName: \"\",\r\n      username: \"\",\r\n      redirect: false,\r\n      checkConfirm: false\r\n    };\r\n  }\r\n\r\n  onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    let {\r\n      email,\r\n      password,\r\n      confirm,\r\n      firstName,\r\n      middleName,\r\n      lastName,\r\n      username\r\n    } = this.state;\r\n\r\n    if (\r\n      email &&\r\n      password &&\r\n      confirm &&\r\n      lastName &&\r\n      username &&\r\n      password === confirm\r\n    ) {\r\n      this.props.UserStore.newUser(this.state)\r\n        .then(() => {\r\n          this.setState({\r\n            redirect: true\r\n          });\r\n        })\r\n        .catch(error => {});\r\n    } else if (password !== confirm) {\r\n      this.setState({\r\n        checkConfirm: true\r\n      });\r\n    }\r\n  };\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    // @ts-ignore\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      email,\r\n      password,\r\n      firstName,\r\n      middleName,\r\n      lastName,\r\n      username,\r\n      confirm,\r\n      checkConfirm,\r\n      redirect\r\n    } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to=\"new/confirmation\" />;\r\n    }\r\n\r\n    let disabled = true;\r\n    if (email && password.length >= 6 && lastName && confirm && username) {\r\n      disabled = false;\r\n    }\r\n    return (\r\n      <div className=\"p-2\">\r\n        <div>Fields marked with * are required</div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <InputField\r\n                id=\"email\"\r\n                onChange={this.onChange}\r\n                value={email}\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                required={true}\r\n              />\r\n              <InputField\r\n                id=\"password\"\r\n                required={true}\r\n                onChange={this.onChange}\r\n                type=\"password\"\r\n                value={password}\r\n                label=\"password (must be 6 or more characters)\"\r\n              />\r\n              <InputField\r\n                id=\"confirm\"\r\n                type=\"password\"\r\n                onChange={this.onChange}\r\n                value={confirm}\r\n                label=\"Retype Password\"\r\n                required={true}\r\n              >\r\n                {checkConfirm && (\r\n                  <div className=\"border border-danger rounded px-1\">\r\n                    Passwords don't match\r\n                  </div>\r\n                )}\r\n              </InputField>\r\n              <InputField\r\n                type=\"text\"\r\n                id=\"username\"\r\n                onChange={this.onChange}\r\n                value={username}\r\n                label=\"Username\"\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <InputField\r\n                type=\"text\"\r\n                id=\"firstName\"\r\n                onChange={this.onChange}\r\n                value={firstName}\r\n                label=\"First Name\"\r\n              />\r\n              <InputField\r\n                type=\"text\"\r\n                id=\"middleName\"\r\n                onChange={this.onChange}\r\n                value={middleName}\r\n                label=\"Middle Name\"\r\n              />\r\n              <InputField\r\n                type=\"text\"\r\n                id=\"lastName\"\r\n                onChange={this.onChange}\r\n                value={lastName}\r\n                label=\"Last Name\"\r\n                required={true}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"btn btn-block btn-primary\"\r\n            type=\"submit\"\r\n            disabled={disabled}\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst InputField: React.FC<{\r\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n  value: string;\r\n  type: string;\r\n  required?: boolean;\r\n  label?: string;\r\n  placeholder?: string;\r\n  id: string;\r\n  children?: any;\r\n}> = ({\r\n  onChange,\r\n  value,\r\n  id,\r\n  label,\r\n  placeholder = \"\",\r\n  required = false,\r\n  children\r\n}) => {\r\n  let formattedPlaceholder: string;\r\n  if (placeholder) {\r\n    formattedPlaceholder =\r\n      placeholder.slice(0, 1).toUpperCase() +\r\n      placeholder.slice(1).toLowerCase() +\r\n      \":\";\r\n    if (required) {\r\n      formattedPlaceholder += \" *\";\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"form-group\">\r\n      {label && (\r\n        <label htmlFor={id}>\r\n          {label.slice(0, 1).toUpperCase() + label.slice(1).toLowerCase()}:\r\n          {required ? \" *\" : \"\"}\r\n        </label>\r\n      )}\r\n      <input\r\n        type={value}\r\n        className=\"form-control\"\r\n        id={id}\r\n        onChange={onChange}\r\n        value={value}\r\n        placeholder={formattedPlaceholder!}\r\n      />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport const New: React.FC<RouteComponentProps> = ({ match }) => {\r\n  console.log(match);\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path={`${match.path}`} component={NewUserForm} />\r\n        <Route\r\n          path={`${match.path}/confirmation`}\r\n          component={NewUserConfirmation}\r\n        />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { observable, action } from \"mobx\";\r\nimport Axios from \"axios\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBCxSv9K2t35EqFEnH8ZpYVn4DT43WhZSY\",\r\n  authDomain: \"kcg-legislator-report-card.firebaseapp.com\",\r\n  databaseURL: \"https://kcg-legislator-report-card.firebaseio.com\",\r\n  projectId: \"kcg-legislator-report-card\",\r\n  storageBucket: \"kcg-legislator-report-card.appspot.com\",\r\n  messagingSenderId: \"794508163147\",\r\n  appId: \"1:794508163147:web:b883245997a55895\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport interface IUser {\r\n  id: number;\r\n  username: string;\r\n  fullName: string;\r\n  email: string;\r\n  authLevel: Number;\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  createdAt: string;\r\n  upatedAt: string;\r\n}\r\n\r\ninterface INewUser {\r\n  username: string;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  password: string;\r\n}\r\n\r\nexport default class UserStore {\r\n  @observable user: IUser | {} = {};\r\n  @observable isLoggedIn: Boolean = false;\r\n\r\n  @action.bound async login(email: string, password: string) {\r\n    await firebase.auth().signInWithEmailAndPassword(email, password);\r\n\r\n    let token = await firebase.auth().currentUser!.getIdToken();\r\n\r\n    Axios.post(\"/login\", { token: token }).then(response => {\r\n      this.isLoggedIn = true;\r\n      this.user = response.data;\r\n    });\r\n  }\r\n  @action.bound async logout() {\r\n    await Axios.post(\"/logout\");\r\n    this.isLoggedIn = false;\r\n    this.user = {};\r\n  }\r\n  @action.bound async newUser(data: INewUser) {\r\n    await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(data.email, data.password);\r\n    let token = await firebase.auth().currentUser!.getIdToken();\r\n\r\n    let response = await Axios.post(\"/api/user/new\", { ...data, token });\r\n    this.isLoggedIn = true;\r\n    this.user = response.data;\r\n  }\r\n}\r\n","import { observable, action } from \"mobx\";\r\nimport { IUser } from \"./UserStore\";\r\nimport Axios from \"axios\";\r\n\r\nexport interface IGrade {\r\n  id?: number;\r\n  type: string;\r\n  grade: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  legislatorId?: string;\r\n  setterId?: string;\r\n  setter?: IUser;\r\n}\r\n\r\nexport interface ILeg {\r\n  id?: number;\r\n  fullName: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  session: number;\r\n  title: string;\r\n  district: number;\r\n  party: string;\r\n  imgLink: string;\r\n  email: string;\r\n  legPage: string;\r\n  phoneNum: string;\r\n  notes: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  grades: IGrade[];\r\n  updatedBy: IUser;\r\n}\r\n\r\nexport default class LegStore {\r\n  @observable legs: ILeg[] = [];\r\n  // @ts-ignore\r\n  @observable current: ILeg = {};\r\n  @observable currentSession = 72;\r\n  @observable session = 72;\r\n\r\n  @action.bound async getOne(id: string) {\r\n    let response = await Axios.get(\"/api/leg\", {\r\n      params: {\r\n        id: id\r\n      }\r\n    });\r\n    console.log(response.data);\r\n\r\n    this.current = response.data;\r\n  }\r\n\r\n  @action.bound async getMany(searchParams: any) {\r\n    let response = await Axios.get(\"api/leg/search\", {\r\n      params: {\r\n        ...searchParams\r\n      }\r\n    });\r\n\r\n    this.legs = response.data;\r\n  }\r\n\r\n  @action.bound async updateLeg(data: ILeg) {\r\n    let response = await Axios.put(`/api/leg/${data.id}`, data);\r\n\r\n    console.log(response.data);\r\n\r\n    this.current = response.data;\r\n  }\r\n\r\n  @action.bound async newLeg(data: ILeg) {\r\n    let response = await Axios.post(\"/api/leg/new\", data);\r\n  }\r\n}\r\n","import UserStore from \"./UserStore\"\r\nimport LegStore from \"./LegStore\"\r\n\r\nexport default {\r\n  UserStore: new UserStore(),\r\n  LegStore: new LegStore()\r\n}\r\n\r\nexport {\r\n  UserStore,\r\n  LegStore\r\n}","import React, { Component } from \"react\";\r\nimport { RouteComponentProps, NavLink } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { UserStore, LegStore } from \"./stores\";\r\n\r\nexport interface INavbarProps extends RouteComponentProps {\r\n  UserStore: UserStore;\r\n  LegStore: LegStore;\r\n}\r\n\r\n@inject(\"UserStore\", \"LegStore\")\r\n@observer\r\nexport class Navbar extends Component<INavbarProps> {\r\n  constructor(props: INavbarProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink to=\"/\">home</NavLink>\r\n        <button onClick={() => this.props.history.push(\"/new\")}>\r\n          New User\r\n        </button>\r\n        <button onClick={() => this.props.history.push(\"/leg\")}>legs</button>\r\n        <button onClick={() => this.props.history.push(\"/leg/new\")}>\r\n          New leg\r\n        </button>\r\n        <span>{this.props.LegStore.session}</span>\r\n        {this.props.UserStore.isLoggedIn ? (\r\n          <button onClick={() => this.props.UserStore.logout()}>logout</button>\r\n        ) : (\r\n          <button onClick={() => this.props.history.push(\"/login\")}>\r\n            Login\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, ReactEventHandler } from \"react\";\r\nimport { RouteComponentProps, Redirect } from \"react-router-dom\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { UserStore } from \"./stores\";\r\n\r\ninterface ILoginProps extends RouteComponentProps {\r\n  UserStore: UserStore;\r\n}\r\n\r\ninterface ILoginState {\r\n  email: string;\r\n  password: string;\r\n  redirect: boolean;\r\n  error: boolean;\r\n}\r\n\r\n@inject(\"UserStore\")\r\n@observer\r\nexport class Login extends Component<ILoginProps, ILoginState> {\r\n  constructor(props: ILoginProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      redirect: false,\r\n      error: false\r\n    };\r\n  }\r\n\r\n  login = (e?: React.MouseEvent) => {\r\n    this.props.UserStore.login(this.state.email, this.state.password)\r\n      .then(() => {\r\n        this.props.history.goBack();\r\n      })\r\n      .catch(() => {\r\n        this.setState({ error: true });\r\n      });\r\n  };\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    // @ts-ignore\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (e: React.FormEvent): void => {\r\n    e.preventDefault();\r\n    this.login();\r\n  };\r\n\r\n  render() {\r\n    let { email, password, redirect, error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        {error && <div>incorrect username or password</div>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, FormEvent } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport Axios from \"axios\";\r\nimport \"./Leg.css\";\r\n\r\nexport interface LegData {\r\n  id?: number;\r\n  fullName?: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  title: string;\r\n  session: string;\r\n  district: string;\r\n  party: string;\r\n  imgLink: string;\r\n  email: string;\r\n  legPage: string;\r\n  phoneNum: string;\r\n  notes: string;\r\n  lastGenerated: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  UserId?: number;\r\n  User: User;\r\n  Grades: Grade[];\r\n}\r\n\r\nexport interface Grade {\r\n  id?: number;\r\n  type: string;\r\n  grade: string | null;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  LegislatorId?: number;\r\n  UserId?: number;\r\n  User?: User;\r\n}\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  uid: string;\r\n  fullName: string;\r\n  email: string;\r\n  authLevel: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface state extends LegData {\r\n  legId: string;\r\n}\r\n\r\nexport class Leg extends Component<RouteComponentProps<{ id: string }>, state> {\r\n  constructor(props: RouteComponentProps<{ id: string }>) {\r\n    super(props);\r\n\r\n    console.log(this.props.match.params);\r\n\r\n    this.state = {\r\n      legId: this.props.match.params.id,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      middleName: \"\",\r\n      title: \"\",\r\n      session: \"\",\r\n      district: \"\",\r\n      party: \"\",\r\n      imgLink: \"\",\r\n      email: \"\",\r\n      legPage: \"\",\r\n      phoneNum: \"\",\r\n      notes: \"\",\r\n      lastGenerated: \"\",\r\n      createdAt: \"\",\r\n      updatedAt: \"\",\r\n      User: {} as User,\r\n      Grades: [\r\n        { type: \"Donation\", grade: \"\" },\r\n        { type: \"Rhetoric\", grade: \"\" },\r\n        { type: \"Voting\", grade: \"\" }\r\n      ]\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getLeg();\r\n  }\r\n\r\n  getLeg = async () => {\r\n    let response = await Axios.get(\"/api/leg/\" + this.state.legId);\r\n    console.log(response.data);\r\n\r\n    let { Grades, ...rest } = response.data;\r\n\r\n    if (!Grades.length) {\r\n      Grades = Array.from({ length: 10 }, () => ({}));\r\n    }\r\n\r\n    this.setState({\r\n      Grades,\r\n      ...rest\r\n    });\r\n  };\r\n\r\n  onSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    let { firstName, lastName, title, district, party } = this.state;\r\n    if (!firstName || !lastName || !title || !district || !party) {\r\n      if (!firstName) {\r\n        // TODO: proper warning\r\n        console.log(\"need firstName\");\r\n      }\r\n      if (!lastName) {\r\n        // TODO: proper warning\r\n        console.log(\"need lastName\");\r\n      }\r\n      if (!title) {\r\n        // TODO: proper warning\r\n        console.log(\"need title\");\r\n      }\r\n      if (!district) {\r\n        // TODO: proper warning\r\n        console.log(\"need district\");\r\n      }\r\n      if (!party) {\r\n        // TODO: proper warning\r\n        console.log(\"need party\");\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    let { legId, Grades, createdAt, updatedAt, ...rest } = this.state;\r\n\r\n    let formattedGrades: { [e: string]: any } = {};\r\n\r\n    for (let each in rest) {\r\n      console.log(each);\r\n\r\n      // @ts-ignore\r\n      if (rest[each] === \"\") {\r\n        // @ts-ignore\r\n        rest[each] = null;\r\n      }\r\n    }\r\n    console.log(rest);\r\n\r\n    for (let each of Grades) {\r\n      formattedGrades[each.type] = each.grade;\r\n    }\r\n    console.log(formattedGrades);\r\n\r\n    await Axios.put(\r\n      \"/api/leg/\" + legId,\r\n      {\r\n        Grades: formattedGrades,\r\n        ...rest\r\n      },\r\n      {\r\n        withCredentials: true\r\n      }\r\n    );\r\n  };\r\n\r\n  onReset = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.getLeg();\r\n  };\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    //@ts-ignore\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  onRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log(e.target.dataset.i);\r\n\r\n    let newGrades = this.state.Grades.slice();\r\n    //@ts-ignore\r\n    newGrades[e.target.dataset.i].grade = e.target.value;\r\n\r\n    this.setState({\r\n      // @ts-ignore\r\n      Grades: newGrades\r\n    });\r\n  };\r\n\r\n  generate = (e: React.FormEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    Axios.get(\"/generator\", {\r\n      params: {\r\n        id: this.state.legId\r\n      },\r\n      responseType: \"blob\"\r\n    })\r\n      .then(response => {\r\n        console.log(response.headers);\r\n\r\n        let filename = response.headers[\"x-suggested-filename\"];\r\n\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", filename);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n  render() {\r\n    let {\r\n      firstName,\r\n      middleName,\r\n      lastName,\r\n      party,\r\n      title,\r\n      district,\r\n      Grades,\r\n      phoneNum,\r\n      email,\r\n      imgLink,\r\n      legPage\r\n    } = this.state;\r\n\r\n    return (\r\n      <form className=\"p-2\" onSubmit={this.onSubmit} onReset={this.onReset}>\r\n        <div className=\"form-row\">\r\n          <div className=\"col-md form-group\">\r\n            <label htmlFor=\"first\">First Name *</label>\r\n            <input\r\n              required\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              value={firstName}\r\n            />\r\n          </div>\r\n          <div className=\"col-md form-group\">\r\n            <label htmlFor=\"middle\">Middle Name</label>\r\n            <input\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"middleName\"\r\n              name=\"middleName\"\r\n              value={middleName || \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-md form-group\">\r\n            <label htmlFor=\"last\">Last Name *</label>\r\n            <input\r\n              required\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              value={lastName}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"party\">Party *</label>\r\n              <select\r\n                required\r\n                className=\"form-control custom-select\"\r\n                id=\"party\"\r\n                name=\"party\"\r\n                value={party}\r\n                onChange={this.onChange}\r\n              >\r\n                <option value=\"DEMOCRAT\">Democrat</option>\r\n                <option value=\"REPUBLICAN\">Republican</option>\r\n                <option value=\"INDEPENDENT\">Independent</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title *</label>\r\n              <select\r\n                required\r\n                className=\"form-control custom-select\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={title}\r\n                onChange={this.onChange}\r\n              >\r\n                <option value=\"REPRESENTATIVE\">Representative</option>\r\n                <option value=\"SENATOR\">Senator</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <label htmlFor=\"district\">District *</label>\r\n            <input\r\n              required\r\n              onChange={this.onChange}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"district\"\r\n              name=\"district\"\r\n              value={district}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col-md border rounded m-1\">\r\n            <label>Donation</label>\r\n            <div className=\"form-group pl-3\">\r\n              <div className=\"row\">\r\n                {[\"A\", \"B\", \"C\", \"D\", \"F\", \"∅\"].map((letter, i) => {\r\n                  let checked = false;\r\n                  if (letter === \"∅\" && Grades[0].grade === null) {\r\n                    checked = true;\r\n                  } else if (Grades[0].grade === letter) {\r\n                    checked = true;\r\n                  }\r\n                  return (\r\n                    <div\r\n                      key={i}\r\n                      className=\"custom-control custom-radio custom-control-inline col\"\r\n                    >\r\n                      <input\r\n                        onChange={this.onRadioChange}\r\n                        className=\"custom-control-input\"\r\n                        type=\"radio\"\r\n                        name=\"Donation\"\r\n                        id={\"donation\" + letter}\r\n                        value={letter}\r\n                        data-i={0}\r\n                        checked={checked}\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor={\"donation\" + letter}\r\n                      >\r\n                        {letter}\r\n                      </label>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md border rounded m-1\">\r\n            <label>Rhetoric</label>\r\n            <div className=\"form-group pl-3 row\">\r\n              {[\"A\", \"B\", \"C\", \"D\", \"F\", \"∅\"].map((letter, i) => {\r\n                let checked = false;\r\n                if (letter === \"∅\" && Grades[1].grade === null) {\r\n                  checked = true;\r\n                } else if (Grades[1].grade === letter) {\r\n                  checked = true;\r\n                }\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className=\"custom-control custom-radio custom-control-inline col\"\r\n                  >\r\n                    <input\r\n                      onChange={this.onRadioChange}\r\n                      className=\"custom-control-input\"\r\n                      type=\"radio\"\r\n                      name=\"Rhetoric\"\r\n                      id={\"rhetoric\" + letter}\r\n                      value={letter}\r\n                      data-i={1}\r\n                      checked={checked}\r\n                    />\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor={\"rhetoric\" + letter}\r\n                    >\r\n                      {letter}\r\n                    </label>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md border rounded m-1\">\r\n            <label>Voting</label>\r\n            <div className=\"form-group pl-3\">\r\n              <div className=\"row\">\r\n                {[\"A\", \"B\", \"C\", \"D\", \"F\", \"∅\"].map((letter, i) => {\r\n                  let checked = false;\r\n                  if (letter === \"∅\" && Grades[2].grade === null) {\r\n                    checked = true;\r\n                  } else if (Grades[2].grade === letter) {\r\n                    checked = true;\r\n                  }\r\n                  return (\r\n                    <div\r\n                      key={i}\r\n                      className=\"custom-control custom-radio custom-control-inline col\"\r\n                    >\r\n                      <input\r\n                        onChange={this.onRadioChange}\r\n                        className=\"custom-control-input\"\r\n                        type=\"radio\"\r\n                        name=\"Voting\"\r\n                        id={\"voting\" + letter}\r\n                        value={letter}\r\n                        data-i={2}\r\n                        checked={checked}\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor={\"voting\" + letter}\r\n                      >\r\n                        {letter}\r\n                      </label>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col-md\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phoneNum\">Phone Num.</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"phoneNum\"\r\n                name=\"phoneNum\"\r\n                value={phoneNum || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={email || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"imgLink\">Portrait Link</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                type=\"url\"\r\n                className=\"form-control\"\r\n                id=\"imgLink\"\r\n                name=\"imgLink\"\r\n                value={imgLink || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"legPage\">Link Legislator webpage</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                type=\"url\"\r\n                className=\"form-control\"\r\n                id=\"legPage\"\r\n                name=\"legPage\"\r\n                value={legPage || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"col-md\">\r\n            <button type=\"reset\" className=\"btn-warning btn col\">\r\n              Reset\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <button type=\"submit\" className=\"btn btn-primary col\">\r\n              Commit/Update\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            {!imgLink && (\r\n              <span className=\"text-center p-2 m-2\">\r\n                Fill portrait link and save to generate report card\r\n              </span>\r\n            )}\r\n            <button\r\n              className=\"btn btn-success col\"\r\n              onClick={this.generate}\r\n              disabled={!imgLink}\r\n            >\r\n              Generate Report Card\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, FormEvent } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport Axios from \"axios\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { LegStore } from \"../stores\";\r\n\r\nexport interface LegData {\r\n  id?: number;\r\n  fullName?: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  title: string;\r\n  session: string;\r\n  district: string;\r\n  party: string;\r\n  imgLink: string;\r\n  email: string;\r\n  legPage: string;\r\n  phoneNum: string;\r\n  notes: string;\r\n  lastGenerated: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  UserId?: number;\r\n  User: User;\r\n  Grades: Grade[];\r\n}\r\n\r\nexport interface Grade {\r\n  id?: number;\r\n  type: string;\r\n  grade: string | null;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  LegislatorId?: number;\r\n  UserId?: number;\r\n  User?: User;\r\n}\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  uid: string;\r\n  fullName: string;\r\n  email: string;\r\n  authLevel: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface props extends RouteComponentProps<{ id: string }> {\r\n  LegStore: LegStore;\r\n}\r\ninterface state extends LegData {\r\n  legId: string;\r\n}\r\n\r\n@inject(\"LegStore\")\r\n@observer\r\nexport class NewLeg extends Component<props, state> {\r\n  constructor(props: props) {\r\n    super(props);\r\n\r\n    console.log(this.props.match.params);\r\n\r\n    this.state = {\r\n      legId: this.props.match.params.id,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      middleName: \"\",\r\n      title: \"\",\r\n      session: \"\",\r\n      district: \"\",\r\n      party: \"\",\r\n      imgLink: \"\",\r\n      email: \"\",\r\n      legPage: \"\",\r\n      phoneNum: \"\",\r\n      notes: \"\",\r\n      lastGenerated: \"\",\r\n      createdAt: \"\",\r\n      updatedAt: \"\",\r\n      User: {} as User,\r\n      Grades: [\r\n        { type: \"Donation\", grade: \"\" },\r\n        { type: \"Rhetoric\", grade: \"\" },\r\n        { type: \"Voting\", grade: \"\" }\r\n      ]\r\n    };\r\n  }\r\n\r\n  onSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    let { firstName, lastName, title, district, party } = this.state;\r\n    if (!firstName || !lastName || !title || !district || !party) {\r\n      if (!firstName) {\r\n        // TODO: proper warning\r\n        console.log(\"need firstName\");\r\n      }\r\n      if (!lastName) {\r\n        // TODO: proper warning\r\n        console.log(\"need lastName\");\r\n      }\r\n      if (!title) {\r\n        // TODO: proper warning\r\n        console.log(\"need title\");\r\n      }\r\n      if (!district) {\r\n        // TODO: proper warning\r\n        console.log(\"need district\");\r\n      }\r\n      if (!party) {\r\n        // TODO: proper warning\r\n        console.log(\"need party\");\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    let { legId, Grades, createdAt, updatedAt, ...rest } = this.state;\r\n\r\n    let formattedGrades: { [e: string]: any } = {};\r\n\r\n    for (let each in rest) {\r\n      console.log(each);\r\n\r\n      // @ts-ignore\r\n      if (rest[each] === \"\") {\r\n        // @ts-ignore\r\n        rest[each] = null;\r\n      }\r\n    }\r\n    console.log(rest);\r\n\r\n    for (let each of Grades) {\r\n      formattedGrades[each.type] = each.grade;\r\n    }\r\n    console.log(formattedGrades);\r\n    console.log(this.props.LegStore.session);\r\n\r\n    Axios.post(\r\n      \"/api/leg/new\",\r\n      {\r\n        session: this.props.LegStore.currentSession,\r\n        Grades: formattedGrades,\r\n        ...rest\r\n      },\r\n      {\r\n        withCredentials: true\r\n      }\r\n    ).then(response => {\r\n      this.props.history.push(\"/leg/\" + response.data.id);\r\n    });\r\n  };\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    //@ts-ignore\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  onRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log(e.target.dataset.i);\r\n\r\n    let newGrades = this.state.Grades.slice();\r\n    //@ts-ignore\r\n    newGrades[e.target.dataset.i].grade = e.target.value;\r\n\r\n    this.setState({\r\n      // @ts-ignore\r\n      Grades: newGrades\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state);\r\n\r\n    let {\r\n      firstName,\r\n      middleName,\r\n      lastName,\r\n      party,\r\n      title,\r\n      district,\r\n      Grades,\r\n      phoneNum,\r\n      email,\r\n      imgLink,\r\n      legPage\r\n    } = this.state;\r\n\r\n    return (\r\n      <form className=\"p-2\" onSubmit={this.onSubmit}>\r\n        <div>Fields marked wtih * are required</div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col-md form-group\">\r\n            <label htmlFor=\"first\">First Name *</label>\r\n            <input\r\n              required\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              value={firstName}\r\n            />\r\n          </div>\r\n          <div className=\"col-md form-group\">\r\n            <label htmlFor=\"middle\">Middle Name</label>\r\n            <input\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"middleName\"\r\n              name=\"middleName\"\r\n              value={middleName}\r\n            />\r\n          </div>\r\n          <div className=\"col-md form-group\">\r\n            <label htmlFor=\"last\">Last Name *</label>\r\n            <input\r\n              required\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              value={lastName}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"party\">Party *</label>\r\n              <select\r\n                required\r\n                className=\"form-control custom-select\"\r\n                id=\"party\"\r\n                name=\"party\"\r\n                value={party}\r\n                onChange={this.onChange}\r\n              >\r\n                <option value=\"\">Pick Party</option>\r\n                <option value=\"DEMOCRAT\">Democrat</option>\r\n                <option value=\"REPUBLICAN\">Republican</option>\r\n                <option value=\"INDEPENDENT\">Independent</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title *</label>\r\n              <select\r\n                required\r\n                className=\"form-control custom-select\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={title}\r\n                onChange={this.onChange}\r\n              >\r\n                <option value=\"\">Pick Title</option>\r\n                <option value=\"REPRESENTATIVE\">Representative</option>\r\n                <option value=\"SENATOR\">Senator</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <label htmlFor=\"district\">District *</label>\r\n            <input\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"district\"\r\n              name=\"district\"\r\n              value={district}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col-md border rounded m-1\">\r\n            <label>Donation</label>\r\n            <div className=\"form-group pl-3\">\r\n              <div className=\"row\">\r\n                {[\"A\", \"B\", \"C\", \"D\", \"F\", \"∅\"].map((letter, i) => {\r\n                  let checked = false;\r\n                  if (letter === \"∅\" && Grades[0].grade === null) {\r\n                    checked = true;\r\n                  } else if (Grades[0].grade === letter) {\r\n                    checked = true;\r\n                  }\r\n                  return (\r\n                    <div\r\n                      key={i}\r\n                      className=\"custom-control custom-radio custom-control-inline col\"\r\n                    >\r\n                      <input\r\n                        onChange={this.onRadioChange}\r\n                        className=\"custom-control-input\"\r\n                        type=\"radio\"\r\n                        name=\"Donation\"\r\n                        id={\"donation\" + letter}\r\n                        value={letter}\r\n                        data-i={0}\r\n                        checked={checked}\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor={\"donation\" + letter}\r\n                      >\r\n                        {letter}\r\n                      </label>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md border rounded m-1\">\r\n            <label>Rhetoric</label>\r\n            <div className=\"form-group pl-3 row\">\r\n              {[\"A\", \"B\", \"C\", \"D\", \"F\", \"∅\"].map((letter, i) => {\r\n                let checked = false;\r\n                if (letter === \"∅\" && Grades[1].grade === null) {\r\n                  checked = true;\r\n                } else if (Grades[1].grade === letter) {\r\n                  checked = true;\r\n                }\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className=\"custom-control custom-radio custom-control-inline col\"\r\n                  >\r\n                    <input\r\n                      onChange={this.onRadioChange}\r\n                      className=\"custom-control-input\"\r\n                      type=\"radio\"\r\n                      name=\"Rhetoric\"\r\n                      id={\"rhetoric\" + letter}\r\n                      value={letter}\r\n                      data-i={1}\r\n                      checked={checked}\r\n                    />\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor={\"rhetoric\" + letter}\r\n                    >\r\n                      {letter}\r\n                    </label>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md border rounded m-1\">\r\n            <label>Voting</label>\r\n            <div className=\"form-group pl-3\">\r\n              <div className=\"row\">\r\n                {[\"A\", \"B\", \"C\", \"D\", \"F\", \"∅\"].map((letter, i) => {\r\n                  let checked = false;\r\n                  if (letter === \"∅\" && Grades[2].grade === null) {\r\n                    checked = true;\r\n                  } else if (Grades[2].grade === letter) {\r\n                    checked = true;\r\n                  }\r\n                  return (\r\n                    <div\r\n                      key={i}\r\n                      className=\"custom-control custom-radio custom-control-inline col\"\r\n                    >\r\n                      <input\r\n                        onChange={this.onRadioChange}\r\n                        className=\"custom-control-input\"\r\n                        type=\"radio\"\r\n                        name=\"Voting\"\r\n                        id={\"voting\" + letter}\r\n                        value={letter}\r\n                        data-i={2}\r\n                        checked={checked}\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor={\"voting\" + letter}\r\n                      >\r\n                        {letter}\r\n                      </label>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col-md\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phoneNum\">Phone Num.</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"phoneNum\"\r\n                name=\"phoneNum\"\r\n                value={phoneNum || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={email || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"imgLink\">Portrait Link</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"imgLink\"\r\n                name=\"imgLink\"\r\n                value={imgLink || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"legPage\">Link Legislator webpage</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"legPage\"\r\n                name=\"legPage\"\r\n                value={legPage || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"col-md\">\r\n            <button type=\"reset\" className=\"btn-warning btn col\">\r\n              Reset\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <button type=\"submit\" className=\"btn btn-primary col\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nexport class LegMain extends Component<\r\n  {},\r\n  {\r\n    legs: [];\r\n  }\r\n> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      legs: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    Axios.get(\"../api/leg/search\").then(response => {\r\n      console.log(response);\r\n      this.setState({\r\n        legs: response.data\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    let listItems = this.state.legs.map((entry: any) => {\r\n      let grades = entry.Grades.map((grade: any) => {\r\n        return (\r\n          <div className=\"col col-lg-1 text-center\">\r\n            {grade.grade ? (\r\n              grade.grade\r\n            ) : (\r\n              <small className=\"text-muted\">∅</small>\r\n            )}\r\n          </div>\r\n        );\r\n      });\r\n      return (\r\n        <Link\r\n          to={`/leg/${entry.id}`}\r\n          key={entry.id}\r\n          className=\"list-group-item list-group-item-action\"\r\n        >\r\n          <div className=\"row p-1 justify-content-center\">\r\n            <div className=\"col-3 col-lg-2\">\r\n              {entry.title.slice(0, 3)} {entry.district}\r\n            </div>\r\n            <div className=\"col-9 col-lg \">\r\n              <h6>\r\n                ({entry.party.slice(0, 1)}) {entry.fullName}\r\n              </h6>\r\n            </div>\r\n            {grades}\r\n          </div>\r\n        </Link>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h3>List of things</h3>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"row mb-3 mr-1 p-2 border rounded\">\r\n              <div className=\"col-3\">District</div>\r\n              <div className=\"col-9 col-lg\">Name</div>\r\n              <div className=\"col col-lg-1 text-center\">\r\n                <abbr title=\"Donation\">D</abbr>\r\n              </div>\r\n              <div className=\"col col-lg-1 text-center\">\r\n                <abbr title=\"Rhetoric\">R</abbr>\r\n              </div>\r\n              <div className=\"col col-lg-1 text-center\">\r\n                <abbr title=\"Voting\">V</abbr>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col list-group mx-auto\">{listItems}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Leg } from \"./Leg\";\r\nimport { NewLeg } from \"./NewLeg\";\r\nimport React from \"react\";\r\n\r\nimport { Switch, Route, RouteComponentProps } from \"react-router-dom\";\r\nimport { LegMain } from \"./LegMain\";\r\n\r\nexport const LegRouter: React.FC<RouteComponentProps> = ({ match }) => {\r\n  console.log(match);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${match.path}`} component={LegMain} />\r\n      <Route exact path={`${match.path}/new`} component={NewLeg} />\r\n      <Route path={`${match.path}/:id`} component={Leg} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default LegRouter;\r\n","import {} from \"./NewUser\";\r\nimport {} from \"./NewUser\";\r\nimport React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport stores from \"./stores\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  RouteComponentProps\r\n} from \"react-router-dom\";\r\nimport { Provider } from \"mobx-react\";\r\n\r\nimport { Navbar } from \"./Navbar\";\r\nimport { New } from \"./NewUser\";\r\nimport { Login } from \"./Login\";\r\nimport Axios from \"axios\";\r\nimport LegRouter from \"./Leg/LegRouter\";\r\n\r\n// @ts-ignore\r\nwindow.stores = stores;\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    Axios.get(\"../api/user/me\", { withCredentials: true })\r\n      .then(response => {\r\n        console.log(response);\r\n\r\n        stores.UserStore.isLoggedIn = true;\r\n        stores.UserStore.user = response.data;\r\n      })\r\n      .catch(error => {\r\n        if (error.code === 401) {\r\n          return;\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider {...stores}>\r\n        <Router>\r\n          <Route component={Navbar} />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/new\" component={New} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/leg\" component={LegRouter} />\r\n            {/* <Route path=\"/leg/update\" component={updateLeg} />\r\n            <Route path=\"/leg/new\" component={NewLeg} />\r\n            <Route path='/leg/search' component={searchLeg} /> */}\r\n\r\n            <Route component={FourOhFour} />\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst FourOhFour: React.FC<RouteComponentProps> = props => {\r\n  console.log(props.history.location);\r\n\r\n  return <>404 ERROR: webpage ({props.history.location.pathname}) not found</>;\r\n};\r\n\r\nconst Home: React.FC<RouteComponentProps> = props => {\r\n  return <>home</>;\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}