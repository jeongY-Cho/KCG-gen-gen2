{"version":3,"sources":["stores/UserStore.tsx","stores/LegStore.tsx","stores/index.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["UserStore","action","bound","username","Axios","post","response","console","log","data","this","isLoggedIn","user","observable","LegStore","id","get","params","current","searchParams","Object","objectSpread","legs","put","concat","stores","Navbar","props","react_default","a","createElement","react_router_dom","to","onClick","history","push","Home","inject","observer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","target","value","state","_this2","Fragment","JSON","stringify","logout","type","placeholder","login","Component","Test","_this3","NewUserForm","_this4","defineProperty","newUser","then","catch","err","email","firstName","lastName","middleName","NewUserConfirmation","FourOhFour","goBack","Leg","_this5","getLeg","getOne","getCard","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","url","method","responseType","headers","filename","window","URL","createObjectURL","Blob","link","document","href","setAttribute","body","appendChild","click","stop","session","district","legPage","phoneNum","notes","grades","party","title","createdAt","updatedAt","_this$props$LegStore$","map","grade","key","toLowerCase","Date","toLocaleDateString","updateLeg","_this6","update","_callee2","_context2","toUpperCase","onGradeChange","slice","dataset","i","substring","fullName","imgLink","_this7","_this$state","data-i","newLeg","_this8","_callee3","_context3","_this9","_this$state2","searchLeg","App","index_module","react_router","component","exact","path","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83978a94.chunk.js","sourcesContent":["import { observable, action } from \"mobx\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nexport interface IUser {\r\n  id: Number,\r\n  username: String,\r\n  fullName: String,\r\n  email: String,\r\n  authLevel: Number,\r\n  firstName: String,\r\n  lastName: String,\r\n  middleName: String,\r\n  createdAt: string,\r\n  upatedAt: string,\r\n}\r\n\r\ninterface INewUser {\r\n  username: String,\r\n  email: String,\r\n  firstName: String,\r\n  lastName: String,\r\n  middleName: String,\r\n}\r\n\r\n\r\nexport default class UserStore {\r\n  @observable user: IUser | {} = {}\r\n  @observable isLoggedIn: Boolean = false\r\n\r\n  @action.bound async login(username: String) {\r\n\r\n    let response = await Axios.post(\"/login\", {\r\n      username\r\n    })\r\n    console.log(response);\r\n\r\n\r\n    if (response.data) {\r\n      this.isLoggedIn = true\r\n      this.user = response.data\r\n    }\r\n\r\n  }\r\n  @action.bound logout() {\r\n    this.isLoggedIn = false\r\n    this.user = {}\r\n  }\r\n  @action.bound async newUser(data: INewUser) {\r\n    await Axios.post(\"/api/user/new\", data)\r\n  }\r\n}\r\n","import { observable, action } from \"mobx\";\r\nimport { IUser } from \"./UserStore\"\r\nimport Axios from \"axios\";\r\n\r\n\r\n\r\n\r\nexport interface IGrade {\r\n  id: number,\r\n  type: string,\r\n  grade: string,\r\n  createdAt: string,\r\n  updatedAt: string,\r\n  legislatorId: string,\r\n  setterId: string,\r\n  setter: IUser\r\n}\r\n\r\n\r\nexport interface ILeg {\r\n  id: number,\r\n  fullName: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  middleName: string,\r\n  session: number\r\n  title: string,\r\n  district: number,\r\n  party: string,\r\n  imgLink: string,\r\n  email: string,\r\n  legPage: string,\r\n  phoneNum: string,\r\n  notes: string,\r\n  createdAt: string,\r\n  updatedAt: string\r\n  grades: IGrade[],\r\n\r\n}\r\n\r\nexport default class LegStore {\r\n\r\n  @observable legs: ILeg[] = []\r\n  // @ts-ignore\r\n  @observable current: ILeg = {}\r\n\r\n  @action.bound async getOne(id: string) {\r\n    let response = await Axios.get(\"/api/leg\", {\r\n      params: {\r\n        id: id\r\n      }\r\n    })\r\n\r\n    this.current = response.data\r\n  }\r\n\r\n  @action.bound async getMany(searchParams: any) {\r\n    let response = await Axios.get(\"api/leg/search\", {\r\n      params: {\r\n        ...searchParams\r\n      }\r\n    })\r\n\r\n    this.legs = response.data\r\n  }\r\n\r\n  @action.bound async updateLeg(data: ILeg) {\r\n    let response = await Axios.put(`/api/leg/${data.id}`, data)\r\n\r\n    console.log(response.data);\r\n\r\n    this.current = response.data\r\n\r\n  }\r\n}\r\n\r\n","import UserStore from \"./UserStore\"\r\nimport LegStore from \"./LegStore\"\r\n\r\nexport default {\r\n  UserStore: new UserStore(),\r\n  LegStore: new LegStore()\r\n}\r\n\r\nexport {\r\n  UserStore,\r\n  LegStore\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport stores, { UserStore, LegStore } from \"./stores\";\r\nimport { BrowserRouter as Router, Route, Switch, RouteComponentProps, NavLink, Link } from \"react-router-dom\"\r\nimport { Provider } from \"mobx-react\"\r\nimport { inject, observer } from \"mobx-react\"\r\nimport Axios from 'axios';\r\nimport { ILeg } from './stores/LegStore';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider {...stores}>\r\n      <Router>\r\n        <Route component={Navbar} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/test\" component={Test} />\r\n          <Route exact path=\"/new\" component={NewUserForm} />\r\n          <Route path=\"/new/confirmation\" component={NewUserConfirmation} />\r\n          <Route exact path=\"/leg\" component={Leg} />\r\n          <Route path=\"/leg/update\" component={updateLeg} />\r\n          <Route path=\"/leg/new\" component={newLeg} />\r\n          <Route path='/leg/search' component={searchLeg} />\r\n\r\n          <Route component={FourOhFour} />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n\r\n}\r\n\r\nconst Navbar: React.FC<RouteComponentProps> = (props) => {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/\" >home</NavLink>\r\n      <button onClick={() => props.history.push(\"/new\")}>New User</button>\r\n      <button onClick={() => props.history.push(\"/leg\")}>legs</button>\r\n      <button onClick={() => props.history.push(\"/leg/new\")}>New leg</button>\r\n      <button onClick={() => props.history.push(\"/leg/search\")}>search leg</button>\r\n      <button onClick={() => Axios.post(\"/logout\")}>logout</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\ninterface IHomeProps extends RouteComponentProps {\r\n  UserStore: UserStore\r\n}\r\ninterface IHomeState {\r\n  username: string\r\n}\r\n\r\n@inject(\"UserStore\") @observer\r\nclass Home extends Component<IHomeProps, IHomeState> {\r\n  constructor(props: IHomeProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      username: ''\r\n    }\r\n  }\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        {this.props.UserStore.isLoggedIn ?\r\n          <>\r\n            <div>{JSON.stringify(this.props.UserStore.user)}</div>\r\n            <button onClick={() => { this.props.UserStore.logout() }}>logout</button>\r\n          </>\r\n          :\r\n          <>\r\n            <input type=\"text\" value={this.state.username} placeholder=\"Username\" onChange={this.onChange} />\r\n            <button onClick={() => { this.props.UserStore.login(this.state.username) }}>login</button>\r\n          </>\r\n        }\r\n        <button onClick={() => { this.props.history.push(\"/test\") }}>go test</button>\r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nclass Test extends Component<RouteComponentProps> {\r\n  render() {\r\n    return (\r\n      <button onClick={() => this.props.history.push(\"/\")}>go home</button>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nfunction NewUser(props: RouteComponentProps) {\r\n  console.log(props.match);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/new\" component={NewUserForm} />\r\n      <Route path=\"/confirmation\" component={NewUserConfirmation} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\n\r\n\r\ninterface INewUserFormProps extends RouteComponentProps {\r\n  UserStore: UserStore\r\n}\r\n\r\ninterface INewUserFormState {\r\n  username: string,\r\n  email: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  middleName: string\r\n}\r\n\r\n@inject(\"UserStore\")\r\nclass NewUserForm extends Component<INewUserFormProps, INewUserFormState> {\r\n  constructor(props: INewUserFormProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      middleName: \"\"\r\n    }\r\n  }\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    // @ts-ignore\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  onClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    this.props.UserStore.newUser(this.state)\r\n      .then(() => {\r\n        this.props.history.push(\"new/confirmation\")\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response);\r\n\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input type=\"text\" id=\"username\" onChange={this.onChange} placeholder=\"Username\" />\r\n        <input type=\"text\" id=\"email\" onChange={this.onChange} placeholder=\"Email\" />\r\n        <input type=\"text\" id=\"firstName\" onChange={this.onChange} placeholder=\"First Name\" />\r\n        <input type=\"text\" id=\"lastName\" onChange={this.onChange} placeholder=\"Last Name\" />\r\n        <input type=\"text\" id=\"middleName\" onChange={this.onChange} placeholder=\"Middle Name\" />\r\n        <button onClick={this.onClick}>Register</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction NewUserConfirmation(props: RouteComponentProps) {\r\n  return (\r\n    <div>\r\n      New User Created\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst FourOhFour: React.FC<RouteComponentProps> = (props) => {\r\n  return (\r\n    <div>\r\n      mock 404 error\r\n      <button onClick={() => props.history.goBack()}>go back</button>\r\n      <button onClick={() => props.history.push(\"/\")}>go home</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\ninterface ILegProps extends RouteComponentProps {\r\n  LegStore: LegStore\r\n}\r\n\r\ninterface ILegState {\r\n  id: string\r\n}\r\n\r\n@inject(\"LegStore\") @observer\r\nclass Leg extends Component<ILegProps, ILegState> {\r\n  constructor(props: ILegProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      id: ''\r\n    }\r\n  }\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    // @ts-ignore\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  getLeg = () => {\r\n    this.props.LegStore.getOne(this.state.id)\r\n  }\r\n\r\n  getCard = async () => {\r\n\r\n    Axios({\r\n      url: '/generator',\r\n      method: 'GET',\r\n      params: {\r\n        id: this.props.LegStore.current.id\r\n      },\r\n      responseType: 'blob', // important\r\n    }).then((response: any) => {\r\n      console.log(response.headers);\r\n\r\n      let filename = response.headers[\"x-suggested-filename\"]\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', filename);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    });\r\n\r\n  }\r\n  render() {\r\n    var firstName, lastName, session, district, email, legPage, phoneNum, notes, grades, party;\r\n    var title = ''\r\n    var createdAt = ''\r\n    var updatedAt = ''\r\n    if (this.props.LegStore.current.id) {\r\n      ({ firstName, lastName, title, session, district, email, legPage, phoneNum, notes, createdAt, updatedAt, grades, party } = this.props.LegStore.current)\r\n      console.log(typeof createdAt);\r\n\r\n      grades = grades.map((grade) => {\r\n        return (\r\n          <li key={grade.type}>\r\n            {grade.type}: {grade.grade}\r\n          </li>\r\n        )\r\n      })\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <input type=\"text\" value={this.state.id} onChange={this.onChange} id=\"id\" placeholder=\"ID\" />\r\n        <button onClick={this.getLeg}>get leg</button>\r\n        <div>first name: {firstName}</div>\r\n        <div>last name: {lastName}</div>\r\n        <div>party: {party}</div>\r\n        <div>session: {session}</div>\r\n        <div>title: {title.toLowerCase()}</div>\r\n        <div>district: {district}</div>\r\n        <div>email: {email}</div>\r\n        <div>legislator webapage: {legPage}</div>\r\n        <div>phone number: {phoneNum}</div>\r\n        <div>grades:\r\n          <ul>\r\n            {grades}\r\n\r\n          </ul>\r\n        </div>\r\n        <div>notes: {notes}</div>\r\n        {this.props.LegStore.current.id &&\r\n          <>\r\n            <div>created: {new Date(createdAt).toLocaleDateString()}</div>\r\n            <div>updatedAt: {new Date(updatedAt).toLocaleDateString()}</div>\r\n            <button onClick={this.getCard}>get card</button>\r\n            <Link to=\"/leg/update\">update info</Link>\r\n          </>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\ninterface IUpdateLegProps extends RouteComponentProps {\r\n  LegStore: LegStore,\r\n}\r\ninterface IUpdateLegState extends ILeg {\r\n\r\n}\r\n\r\n@inject(\"LegStore\") @observer\r\nclass updateLeg extends Component<IUpdateLegProps, IUpdateLegState> {\r\n  constructor(props: IUpdateLegProps) {\r\n    super(props)\r\n\r\n\r\n    this.state = {\r\n      id: this.props.LegStore.current.id,\r\n      fullName: this.props.LegStore.current.fullName || '',\r\n      firstName: this.props.LegStore.current.firstName || '',\r\n      middleName: this.props.LegStore.current.middleName || '',\r\n      party: this.props.LegStore.current.party || '',\r\n      imgLink: this.props.LegStore.current.imgLink || '',\r\n      lastName: this.props.LegStore.current.lastName || '',\r\n      title: this.props.LegStore.current.title || '',\r\n      session: this.props.LegStore.current.session || 0,\r\n      district: this.props.LegStore.current.district || 0,\r\n      email: this.props.LegStore.current.email || '',\r\n      legPage: this.props.LegStore.current.legPage || '',\r\n      phoneNum: this.props.LegStore.current.phoneNum || '',\r\n      notes: this.props.LegStore.current.notes || '',\r\n      createdAt: this.props.LegStore.current.createdAt || '',\r\n      updatedAt: this.props.LegStore.current.updatedAt || '',\r\n      grades: this.props.LegStore.current.grades || '',\r\n    }\r\n  }\r\n\r\n  update = async () => {\r\n    await this.props.LegStore.updateLeg(this.state)\r\n    this.props.history.push(\"/leg\")\r\n  }\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    if (e.target.id === \"title\") {\r\n      this.setState({\r\n        title: e.target.value.toUpperCase()\r\n      })\r\n    }\r\n    // @ts-ignore\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  onGradeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    // @ts-ignore\r\n    let grades = this.state.grades.slice()\r\n\r\n    // @ts-ignore\r\n    grades[e.target.dataset.i] = {\r\n      type: e.target.id,\r\n      grade: e.target.value.toUpperCase().substring(0, 1)\r\n    }\r\n    this.setState({\r\n      grades: grades\r\n    })\r\n  }\r\n  render() {\r\n    var firstName, lastName, session, district, email, legPage, phoneNum, notes, grades, party;\r\n    var title = ''\r\n    var createdAt = ''\r\n    var updatedAt = ''\r\n    if (this.props.LegStore.current.id) {\r\n      ({ firstName, lastName, title, session, district, email, legPage, phoneNum, notes, createdAt, updatedAt, grades, party } = this.state)\r\n      console.log(typeof createdAt);\r\n\r\n      grades = grades.map((grade, i) => {\r\n        return (\r\n          <li key={grade.type}>\r\n            {grade.type}: <input type=\"text\" id={grade.type} data-i={i} value={grade.grade} onChange={this.onGradeChange} />\r\n          </li>\r\n        )\r\n      })\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <div>first name: <input type=\"text\" onChange={this.onChange} id=\"firstName\" value={firstName} /></div>\r\n        <div>last name: <input type=\"text\" onChange={this.onChange} id=\"lastName\" value={lastName} /></div>\r\n        <div>party: <input type=\"text\" onChange={this.onChange} id=\"party\" value={party} /></div>\r\n        <div>session: <input type=\"text\" onChange={this.onChange} id=\"session\" value={session} /></div>\r\n        <div>title: <input type=\"text\" onChange={this.onChange} id=\"title\" value={title.toLowerCase()} /></div>\r\n        <div>district: <input type=\"text\" onChange={this.onChange} id=\"district\" value={district} /></div>\r\n        <div>email: <input type=\"text\" onChange={this.onChange} id=\"email\" value={email} /></div>\r\n        <div>legislator webapage: <input type=\"text\" onChange={this.onChange} id=\"legPage\" value={legPage} /></div>\r\n        <div>phone number: <input type=\"text\" onChange={this.onChange} id=\"phoneNum\" value={phoneNum} /></div>\r\n        <div>grades:\r\n          <ul>\r\n            {grades}\r\n\r\n          </ul>\r\n        </div>\r\n        <div>notes: <input type=\"text\" onChange={this.onChange} id=\"notes\" value={notes} /></div>\r\n        {this.props.LegStore.current.id &&\r\n          <>\r\n            <div>created: {new Date(createdAt).toLocaleDateString()}</div>\r\n            <div>updatedAt: {new Date(updatedAt).toLocaleDateString()}</div>\r\n            <button onClick={this.update}>update</button>\r\n          </>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\ninterface INewLegProps extends RouteComponentProps {\r\n  LegStore: LegStore,\r\n}\r\ninterface INewLegState extends ILeg {\r\n\r\n}\r\n\r\n@inject(\"LegStore\") @observer\r\nclass newLeg extends Component<INewLegProps, INewLegState> {\r\n  constructor(props: INewLegProps) {\r\n    super(props)\r\n\r\n\r\n    this.state = {\r\n      id: 0,\r\n      fullName: this.props.LegStore.current.fullName,\r\n      firstName: this.props.LegStore.current.firstName,\r\n      middleName: this.props.LegStore.current.middleName,\r\n      party: this.props.LegStore.current.party,\r\n      imgLink: this.props.LegStore.current.imgLink,\r\n      lastName: this.props.LegStore.current.lastName,\r\n      title: this.props.LegStore.current.title,\r\n      session: this.props.LegStore.current.session,\r\n      district: this.props.LegStore.current.district,\r\n      email: this.props.LegStore.current.email,\r\n      legPage: this.props.LegStore.current.legPage,\r\n      phoneNum: this.props.LegStore.current.phoneNum,\r\n      notes: this.props.LegStore.current.notes,\r\n      createdAt: this.props.LegStore.current.createdAt,\r\n      updatedAt: this.props.LegStore.current.updatedAt,\r\n      grades: this.props.LegStore.current.grades,\r\n    }\r\n  }\r\n\r\n  update = async () => {\r\n    await this.props.LegStore.updateLeg(this.state)\r\n    this.props.history.push(\"/leg\")\r\n  }\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    if (e.target.id === \"title\") {\r\n      this.setState({\r\n        title: e.target.value.toUpperCase()\r\n      })\r\n    }\r\n    // @ts-ignore\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  onGradeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    // @ts-ignore\r\n    let grades = this.state.grades.slice()\r\n\r\n    // @ts-ignore\r\n    grades[e.target.dataset.i] = {\r\n      type: e.target.id,\r\n      grade: e.target.value.toUpperCase().substring(0, 1)\r\n    }\r\n    this.setState({\r\n      grades: grades\r\n    })\r\n  }\r\n  render() {\r\n    var firstName, lastName, session, district, email, legPage, phoneNum, notes, grades, party;\r\n    var title = ''\r\n    var createdAt = ''\r\n    var updatedAt = ''\r\n    if (this.props.LegStore.current.id) {\r\n      ({ firstName, lastName, title, session, district, email, legPage, phoneNum, notes, createdAt, updatedAt, grades, party } = this.state)\r\n      console.log(typeof createdAt);\r\n\r\n      grades = grades.map((grade, i) => {\r\n        return (\r\n          <li key={grade.type}>\r\n            {grade.type}: <input type=\"text\" id={grade.type} data-i={i} value={grade.grade} onChange={this.onGradeChange} />\r\n          </li>\r\n        )\r\n      })\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <div>first name: <input type=\"text\" onChange={this.onChange} id=\"firstName\" value={firstName} /></div>\r\n        <div>last name: <input type=\"text\" onChange={this.onChange} id=\"lastName\" value={lastName} /></div>\r\n        <div>party: <input type=\"text\" onChange={this.onChange} id=\"party\" value={party} /></div>\r\n        <div>session: <input type=\"text\" onChange={this.onChange} id=\"session\" value={session} /></div>\r\n        <div>title: <input type=\"text\" onChange={this.onChange} id=\"title\" value={title.toLowerCase()} /></div>\r\n        <div>district: <input type=\"text\" onChange={this.onChange} id=\"district\" value={district} /></div>\r\n        <div>email: <input type=\"text\" onChange={this.onChange} id=\"email\" value={email} /></div>\r\n        <div>legislator webapage: <input type=\"text\" onChange={this.onChange} id=\"legPage\" value={legPage} /></div>\r\n        <div>phone number: <input type=\"text\" onChange={this.onChange} id=\"phoneNum\" value={phoneNum} /></div>\r\n        <div>grades:\r\n          <ul>\r\n            {grades}\r\n\r\n          </ul>\r\n        </div>\r\n        <div>notes: <input type=\"text\" onChange={this.onChange} id=\"notes\" value={notes} /></div>\r\n        {this.props.LegStore.current.id &&\r\n          <>\r\n            <div>created: {new Date(createdAt).toLocaleDateString()}</div>\r\n            <div>updatedAt: {new Date(updatedAt).toLocaleDateString()}</div>\r\n            <button onClick={this.update}>update</button>\r\n          </>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nclass searchLeg extends Component { }\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}